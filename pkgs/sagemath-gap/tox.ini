# To build and test in the tox environment:
#
# ./sage -sh -c '(cd pkgs/sagemath-gap && tox -v -v -v -e sagepython)'
#
# To test interactively:
#
# pkgs/sagemath-gap/.tox/sagepython/bin/python
#
[tox]
envlist =
    sagepython-sagewheels-nopypi-norequirements-notest
    sagepython-sagewheels-nopypi-norequirements
    sagepython-sagewheels-nopypi-norequirements-notest-standard
    sagepython-sagewheels-nopypi-norequirements-notest-full

requires =
    # Auto-provision a modern tox.
    # [pkgenv] added in 4.2 - https://tox.wiki/en/latest/upgrading.html#packaging-configuration-and-inheritance
    # Because of https://github.com/tox-dev/tox/issues/3238, need <4.14.1
    tox>=4.2
    tox<4.14.1

[pkgenv]
# Environment in which to build the sdist.
# https://tox.wiki/en/latest/upgrading.html#packaging-environments
passenv =
    # Variables set by .homebrew-build-env
                             CPATH
                             LIBRARY_PATH
                             PKG_CONFIG_PATH
    # Parallel build
                             SAGE_NUM_THREADS
                             SAGE_NUM_THREADS_PARALLEL
                             MAKEFLAGS
    # SAGE_VENV only for referring to the basepython or finding the wheels
    sagepython, sagewheels:  SAGE_VENV
    # Location of the wheels
    sagewheels:              SAGE_SPKG_WHEELS

setenv =
    # We supply pip options by environment variables so that they
    # apply both to the installation of the dependencies and of the package
    sagewheels:              PIP_FIND_LINKS=file://{env:SAGE_SPKG_WHEELS:{env:SAGE_VENV:{toxinidir}/../../../../venv}/var/lib/sage/wheels}
    nopypi:                  PIP_NO_INDEX=true

[testenv]
deps =
    !norequirements:         -rrequirements.txt

extras =
    !notest:                 test
    standard:                standard
    full:                    full

passenv =                    {[pkgenv]passenv}

setenv =                     {[pkgenv]setenv}
    # Sage scripts such as sage-runtests like to use $HOME/.sage
                             HOME={envdir}
    # Stop 'sage -t --installed' from picking up doc installed in SAGE_LOCAL
                             SAGE_DOC=/doesnotexist
                             KNOWN_TEST_FAILURES={toxinidir}/known-test-failures.json
    # See src/bin/sage-env
                             PYDEVD_DISABLE_FILE_VALIDATION=1

    # Override full package tests for some GAP packages
                             TEST_COMMAND=TestPackage
                             TEST_COMMAND_fplsa=TestPackageAvailability
                             TEST_COMMAND_polycyclic=TestPackageAvailability

allowlist_externals =
    bash

commands =
    # Beware of the treacherous non-src layout. "./sage/" shadows the install sage package.
    # Importing sage.libs.gap.libgap does not work yet because of the runtime dep on 'sage.rings.polynomial'
    # {envpython} -c 'import sys; "" in sys.path and sys.path.remove(""); import sage.libs.gap.libgap'


                    bash -c 'cd $(python -c "import sys; \"\" in sys.path and sys.path.remove(\"\"); from sage.env import SAGE_LIB; print(SAGE_LIB)") \
                              && status=0 \
    !notest:                  && echo "::group:Sage doctests"; if ! sage-runtests -p --force-lib --initial --environment=sage.all__sagemath_gap --probe all --baseline-stats-path=$KNOWN_TEST_FAILURES {posargs:--installed}; then status=1; fi; echo "::endgroup::" \
                              && for package in \
    !full:                                      AClib AutPGrp CRISP Cryst CrystCat FactInt FGA IO LAGUNA PrimGrp ResClasses SmallGrp Sophus utils \
    standard:                                   Alnuth Polenta RadiRoot singular \
    full:                                       $(for root in $(python -c "from sage.env import GAP_ROOT_PATHS; print(GAP_ROOT_PATHS.replace(\";\", \"\\n\"))"); do (cd $root/pkg && ls); done | sort -u) \
    notest,!notest:                  ; do echo "::group::$package"; eval TEST=\$\{TEST_COMMAND_$package-\$TEST_COMMAND\}; if ! sage -gap --nointeract -c "$TEST(\"$package\");" 2>&1 | tee "{env_log_dir}/$package.log"; then status=1; fi; echo "::endgroup::"; done; if ! grep -q "#I  No errors detected while testing" "{env_log_dir}/$package.log"; then status=1; echo "::error title=Error testing GAP package $package::"$(grep "#I " "{env_log_dir}/$package.log"); fi; exit $status'

    # broken: AtlasRep

[testenv:.tox]
# Allow access to PyPI for auto-provisioning a suitable tox version
passenv =
setenv =                     PIP_NO_INDEX=false

[testenv:.pkg-sagepython]
# Environment in which to build the sdist.
# inherits from [pkgenv] - https://tox.wiki/en/latest/upgrading.html#packaging-environments
basepython = {env:SAGE_VENV}/bin/python3

[testenv:.pkg-sagepython-sagewheels-nopypi]
passenv =                    {[pkgenv]passenv}
                             SAGE_VENV
                             SAGE_SPKG_WHEELS

setenv =                     {[pkgenv]setenv}
                             PIP_FIND_LINKS=file://{env:SAGE_SPKG_WHEELS:{env:SAGE_VENV:{toxinidir}/../../../../venv}/var/lib/sage/wheels}
                             PIP_NO_INDEX=true

basepython = {env:SAGE_VENV}/bin/python3

[testenv:.pkg-sagepython-sagewheels-nopypi-editable]
config_settings_build_editable =
                             editable_mode = strict


[testenv:sagepython]
basepython = {env:SAGE_VENV}/bin/python3
package_env = .pkg-sagepython

[testenv:sagepython-sagewheels-nopypi]
basepython = {env:SAGE_VENV}/bin/python3
package_env = .pkg-sagepython-sagewheels-nopypi

[testenv:sagepython-sagewheels]
basepython = {env:SAGE_VENV}/bin/python
package_env = .pkg-sagepython

[testenv:sagepython-norequirements]
basepython = {env:SAGE_VENV}/bin/python3
package_env = .pkg-sagepython


[testenv:sagepython-sagewheels-nopypi-norequirements]
basepython = {env:SAGE_VENV}/bin/python3
package_env = .pkg-sagepython-sagewheels-nopypi

[testenv:sagepython-sagewheels-nopypi-editable]
basepython = {env:SAGE_VENV}/bin/python3
package_env = .pkg-sagepython-sagewheels-nopypi-editable
package = editable
deps = -r requirements-editable.txt
config_settings_build_editable =
                             editable_mode = strict
