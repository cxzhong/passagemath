name: Test wheels

on:
  workflow_dispatch:
    inputs:
      run-id:
        description: 'Workflow run id'
        required: true
  workflow_call:
    inputs:
      run-id:
        type: string
        required: true

jobs:

  tox:
    strategy:
      fail-fast: false
      matrix:
        distribution:
          - sagemath-benzene
          - sagemath-bliss
          - sagemath-buckygen
          - sagemath-categories
          - sagemath-cddlib
          - sagemath-cliquer
          - sagemath-cmr
          - sagemath-combinat
          - sagemath-coxeter3
          - sagemath-ecl
          - sagemath-eclib
          - sagemath-flint
          - sagemath-fricas
          - sagemath-gap
          - sagemath-giac
          - sagemath-glucose
          - sagemath-graphs
          - sagemath-groups
          - sagemath-homfly
          - sagemath-kissat
          - sagemath-latte-4ti2
          - sagemath-libbraiding
          - sagemath-linbox
          - sagemath-lrslib
          - sagemath-maxima
          - sagemath-modules
          - sagemath-msolve
          - sagemath-ntl
          - sagemath-palp
          - sagemath-pari
          - sagemath-planarity
          - sagemath-plantri
          - sagemath-plot
          - sagemath-polyhedra
          - sagemath-qepcad
          - sagemath-rankwidth
          - sagemath-rubiks
          - sagemath-schemes
          - sagemath-sirocco
          - sagemath-singular
          - sagemath-standard-no-symbolics
          - sagemath-symbolics
        os:
          - ubuntu-latest
          - ubuntu-24.04-arm
          - macos-13
          - macos-14
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: "${{ matrix.os }}-*-wheels"
          path: wheelhouse
          merge-multiple: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          run-id: ${{ github.event.inputs.run-id || inputs.run-id }}
      - uses: actions/download-artifact@v4
        with:
          pattern: "noarch-wheels"
          path: wheelhouse
          merge-multiple: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          run-id: ${{ github.event.inputs.run-id || inputs.run-id }}
      - uses: actions/download-artifact@v4
        with:
          pattern: "dist"
          path: wheelhouse
          merge-multiple: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          run-id: ${{ github.event.inputs.run-id || inputs.run-id }}
      - uses: actions/setup-python@v5
        id: python
        with:
          python-version: "3.10"
      - name: Install tox
        run: |
          pip install tox
      - name: Run tox
        run: |
          set -x
          pkg=${{ matrix.distribution }}
          pkg_underscore=${pkg//-/_}
          WHEELHOUSE=$(pwd)/wheelhouse
          export PIP_FIND_LINKS=file://$WHEELHOUSE
          (set +x; cd "$WHEELHOUSE" && for whl in *.whl; do
               case $whl in
                   *$pkg_underscore-*)     ;;
                   *musllinux*)            ;;
                   *_i686*)                ;;
                   *-cp310-*|*-none-any-*) echo "${whl%%-*} @ file://$WHEELHOUSE/$whl";;
               esac;
           done) | tee constraints.txt
          export PIP_CONSTRAINT=$(pwd)/constraints.txt
          case "${{ matrix.os }}" in
              ubuntu*-arm) export SAGE_CONF_TARGETS="fpylll gmpy2 lrcalc_python pplpy";;
          esac
          if [ -n "$SAGE_CONF_TARGETS" ]; then
              sudo apt-get update
              sudo apt-get install binutils make m4 perl flex bison tar bc gcc g++ ca-certificates libbz2-dev bzip2 xz-utils liblzma-dev libffi-dev
              pip install --force-reinstall -v passagemath-conf
              export PIP_FIND_LINKS="$PIP_FIND_LINKS $(sage-config SAGE_SPKG_WHEELS)"
              export PIP_PREFER_BINARY=1
          fi
          case "${{ matrix.os }}" in
              ubuntu*-arm) tag="manylinux*_aarch64";;
              ubuntu*)  tag="manylinux*_x86_64";;
              macos-13) tag="macosx_*_x86_64";;
              macos-14) tag="macosx_*_arm64";;
          esac
          wheel_pattern="$WHEELHOUSE/*$pkg_underscore*-cp310-$tag.whl"
          eval ls -l $wheel_pattern
          wheel=$(eval ls $wheel_pattern | head -n1)
          if [ -n "$wheel" ]; then
              cd pkgs/$pkg
              tox_envs=$(tox -l -q| sed 's/sagepython-.*nopypi-norequirements/py310-norequirements/')
              extras=$(tox -l -q| sed -E 's/sagepython-.*nopypi-norequirements//;s/^-(.*)/[\1]/;s/-/,/;s/^/'$pkg'/;')
              eval tox -v -v -e $(for env in $tox_envs; do echo -n "$comma$env"; comma=,; done) --installpkg "$wheel"
              status=$?
              # Update known test failures
              cd ../..
              pip install passagemath-environment passagemath-repl
              for extra in $extras; do
                  # Setting SAGE_ROOT is a workaround for https://github.com/passagemath/passagemath/issues/800
                  SAGE_ROOT=$(pwd) sage --fixdoctests --distribution "$extra" --toxenv py310-norequirements --update-known-test-failures || echo "(ignored)"
              done
              git diff
              exit $status
          fi
